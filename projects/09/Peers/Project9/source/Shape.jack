// This is the Shape Class 
// It contains a grid which the shape is put into.
// It contains a number from 0-6 which indicates what type of shape it is.  
// It also contains information of the location of the shape that is the 
// reference point for rotation. Also, the radius around that reference 
// point which needs to be rotated.

class Shape {
	field Grid grid;
	field int shapeType; 
	field int rotX;
	field int rotY;
	field int rotRad;

	constructor Shape new(int type) {
		var int r;
		var int c;
	
		let grid = Grid.new(16, 12);
		let shapeType = type;
		let rotX = 0;
		let rotY = 0;
		let rotRad = 0;

		let r = 0;
		while(r < 16) {
			let c = 0;
			while(c < 12) {	
				do grid.setWhite(r,c);
				let c = c + 1;
			}
			let r = r + 1;	
		}

		if(shapeType = 1) {
			do grid.setBlack(0,3);
			do grid.setBlack(0,4);
			do grid.setBlack(0,5);
			do grid.setBlack(0,6);
			let rotY = 0;
			let rotX = 4;
			let rotRad = 2;
		}
		if(shapeType = 6) {
			do grid.setBlack(0,4);
			do grid.setBlack(0,5);
			do grid.setBlack(1,4);
			do grid.setBlack(1,5);
			let rotY = 0;
			let rotX = 4;
			let rotRad = 1;
		}
		if(shapeType = 2) {
			do grid.setBlack(0,3);
			do grid.setBlack(0,4);
			do grid.setBlack(0,5);
			do grid.setBlack(1,3);
			let rotY = 0;
			let rotX = 4;
			let rotRad = 1;
		}
		if(shapeType = 5) {
			do grid.setBlack(0,3);
			do grid.setBlack(0,4);
			do grid.setBlack(0,5);
			do grid.setBlack(1,4);
			let rotY = 0;
			let rotX = 4;
			let rotRad = 1;
		}
		if(shapeType = 3) {
			do grid.setBlack(0,3);
			do grid.setBlack(0,4);
			do grid.setBlack(0,5);
			do grid.setBlack(1,5);
			let rotY = 0;
			let rotX = 4;
			let rotRad = 1;
		}
		if(shapeType = 0) {
			do grid.setBlack(0,3);
			do grid.setBlack(0,4);
			do grid.setBlack(1,4);
			do grid.setBlack(1,5);
			let rotY = 0;
			let rotX = 4;
			let rotRad = 1;
		}
		if(shapeType = 4) {
			do grid.setBlack(0,4);
			do grid.setBlack(0,5);
			do grid.setBlack(1,3);
			do grid.setBlack(1,4);
			let rotY = 0;
			let rotX = 4;
			let rotRad = 1;
		}

		return this;
	}

	method Array getGridArray() {
		return grid.getGridArray();
	}

	method void display() {
		do grid.display();
		return;
	}

	method void erase() {
		do grid.erase();
		return;
	}

	method void shiftDown() {
		do grid.shiftDown();
		let rotY = rotY + 1;
		return;
	}

	method void shiftUp() {
		do grid.shiftUp();
		let rotY = rotY - 1;
		return;
	}

	method void shiftRight() {
		do grid.shiftRight();
		let rotX = rotX + 1;
		return;
	}

	method void shiftLeft() {
		do grid.shiftLeft();
		let rotX = rotX - 1;
		return;
	}
	
	method bool rotate() {
		return grid.rotate(rotX, rotY, rotRad);
	}

	method bool revRotate() {
		return grid.revRotate(rotX, rotY, rotRad);
	}

	method void dispose() {
		do grid.dispose();
		do Memory.deAlloc(this);
		return;
	}
}
