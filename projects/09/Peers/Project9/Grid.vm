function Grid.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push this 0
push this 1
call Math.multiply 2
call Array.new 1
pop this 2
push pointer 0
return
function Grid.gridMerge 2
push argument 0
pop pointer 0
push constant 0
pop local 0
push this 0
push this 1
call Math.multiply 2
pop local 1
label WHILE_EXP0
push local 0
push local 1
lt
not
if-goto WHILE_END0
push local 0
push this 2
add
push local 0
push this 2
add
pop pointer 1
push that 0
push local 0
push argument 1
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Grid.getGridArray 0
push argument 0
pop pointer 0
push this 2
return
function Grid.display 3
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 16
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push constant 12
lt
not
if-goto WHILE_END1
push local 0
push this 0
push local 1
call Math.multiply 2
add
push this 2
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 2
label WHILE_EXP2
push local 2
push constant 16
lt
not
if-goto WHILE_END2
push constant 16384
push constant 10
add
push constant 32
push constant 16
push local 0
call Math.multiply 2
push local 2
add
call Math.multiply 2
add
push local 1
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP2
label WHILE_END2
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Grid.refresh 3
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 16
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push constant 12
lt
not
if-goto WHILE_END1
push local 0
push this 0
push local 1
call Math.multiply 2
add
push this 2
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 2
label WHILE_EXP2
push local 2
push constant 16
lt
not
if-goto WHILE_END2
push constant 16384
push constant 10
add
push constant 32
push constant 16
push local 0
call Math.multiply 2
push local 2
add
call Math.multiply 2
add
push local 1
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP2
label WHILE_END2
goto IF_END0
label IF_FALSE0
push constant 0
pop local 2
label WHILE_EXP3
push local 2
push constant 16
lt
not
if-goto WHILE_END3
push constant 16384
push constant 10
add
push constant 32
push constant 16
push local 0
call Math.multiply 2
push local 2
add
call Math.multiply 2
add
push local 1
add
push constant 0
call Memory.poke 2
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP3
label WHILE_END3
label IF_END0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Grid.erase 3
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 16
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push constant 12
lt
not
if-goto WHILE_END1
push local 0
push this 0
push local 1
call Math.multiply 2
add
push this 2
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 2
label WHILE_EXP2
push local 2
push constant 16
lt
not
if-goto WHILE_END2
push constant 16384
push constant 10
add
push constant 32
push constant 16
push local 0
call Math.multiply 2
push local 2
add
call Math.multiply 2
add
push local 1
add
push constant 0
call Memory.poke 2
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP2
label WHILE_END2
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Grid.setBlack 0
push argument 0
pop pointer 0
push argument 1
push this 0
push argument 2
call Math.multiply 2
add
push this 2
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Grid.setWhite 0
push argument 0
pop pointer 0
push argument 1
push this 0
push argument 2
call Math.multiply 2
add
push this 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Grid.shiftDown 1
push argument 0
pop pointer 0
push this 0
push this 1
call Math.multiply 2
push constant 1
sub
pop local 0
label WHILE_EXP0
push local 0
push constant 0
gt
not
if-goto WHILE_END0
push local 0
push this 2
add
push local 0
push constant 1
sub
push this 2
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
sub
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
push this 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Grid.shiftUp 2
push argument 0
pop pointer 0
push constant 0
pop local 0
push this 0
push this 1
call Math.multiply 2
push constant 1
sub
pop local 1
label WHILE_EXP0
push local 0
push local 1
lt
not
if-goto WHILE_END0
push local 0
push this 2
add
push local 0
push constant 1
add
push this 2
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 1
push this 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Grid.shiftRight 2
push argument 0
pop pointer 0
push this 1
push constant 1
sub
pop local 1
label WHILE_EXP0
push local 1
push constant 0
gt
not
if-goto WHILE_END0
push constant 0
pop local 0
label WHILE_EXP1
push local 0
push this 0
lt
not
if-goto WHILE_END1
push local 0
push this 0
push local 1
call Math.multiply 2
add
push this 2
add
push local 0
push this 0
push local 1
call Math.multiply 2
add
push this 0
sub
push this 2
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 1
sub
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 0
label WHILE_EXP2
push local 0
push this 0
lt
not
if-goto WHILE_END2
push local 0
push this 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP2
label WHILE_END2
push constant 0
return
function Grid.shiftLeft 2
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push this 1
push constant 1
sub
lt
not
if-goto WHILE_END0
push constant 0
pop local 0
label WHILE_EXP1
push local 0
push this 0
lt
not
if-goto WHILE_END1
push local 0
push this 0
push local 1
call Math.multiply 2
add
push this 2
add
push local 0
push this 0
push local 1
call Math.multiply 2
add
push this 0
add
push this 2
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 0
label WHILE_EXP2
push local 0
push this 0
lt
not
if-goto WHILE_END2
push local 0
push this 0
push local 1
call Math.multiply 2
add
push this 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP2
label WHILE_END2
push constant 0
return
function Grid.rotate 6
push argument 0
pop pointer 0
push constant 2
push argument 3
call Math.multiply 2
push constant 1
add
pop local 5
push local 5
push local 5
call Math.multiply 2
call Array.new 1
pop local 0
push constant 0
pop local 3
push argument 2
push argument 3
sub
pop local 1
label WHILE_EXP0
push local 3
push local 5
lt
not
if-goto WHILE_END0
push local 1
push constant 0
lt
push local 1
push this 0
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
call Array.dispose 1
pop temp 0
push constant 0
return
label IF_FALSE0
push constant 0
pop local 4
push argument 1
push argument 3
sub
pop local 2
label WHILE_EXP1
push local 4
push local 5
lt
not
if-goto WHILE_END1
push local 2
push constant 0
lt
push local 2
push this 1
eq
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
call Array.dispose 1
pop temp 0
push constant 0
return
label IF_FALSE1
push local 3
push local 5
push local 4
call Math.multiply 2
add
push local 0
add
push local 1
push this 0
push local 2
call Math.multiply 2
add
push this 2
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 1
add
pop local 2
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP1
label WHILE_END1
push local 3
push constant 1
add
pop local 3
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 3
push argument 1
push argument 3
add
pop local 2
label WHILE_EXP2
push local 3
push local 5
lt
not
if-goto WHILE_END2
push constant 0
pop local 4
push argument 2
push argument 3
sub
pop local 1
label WHILE_EXP3
push local 4
push local 5
lt
not
if-goto WHILE_END3
push local 1
push this 0
push local 2
call Math.multiply 2
add
push this 2
add
push local 3
push local 5
push local 4
call Math.multiply 2
add
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP3
label WHILE_END3
push local 3
push constant 1
add
pop local 3
push local 2
push constant 1
sub
pop local 2
goto WHILE_EXP2
label WHILE_END2
push local 0
call Array.dispose 1
pop temp 0
push constant 0
not
return
function Grid.revRotate 6
push argument 0
pop pointer 0
push constant 2
push argument 3
call Math.multiply 2
push constant 1
add
pop local 5
push local 5
push local 5
call Math.multiply 2
call Array.new 1
pop local 0
push constant 0
pop local 3
push argument 2
push argument 3
sub
pop local 1
label WHILE_EXP0
push local 3
push local 5
lt
not
if-goto WHILE_END0
push local 1
push constant 0
lt
push local 1
push this 0
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
call Array.dispose 1
pop temp 0
push constant 0
return
label IF_FALSE0
push constant 0
pop local 4
push argument 1
push argument 3
sub
pop local 2
label WHILE_EXP1
push local 4
push local 5
lt
not
if-goto WHILE_END1
push local 2
push constant 0
lt
push local 2
push this 1
eq
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
call Array.dispose 1
pop temp 0
push constant 0
return
label IF_FALSE1
push local 3
push local 5
push local 4
call Math.multiply 2
add
push local 0
add
push local 1
push this 0
push local 2
call Math.multiply 2
add
push this 2
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 1
add
pop local 2
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP1
label WHILE_END1
push local 3
push constant 1
add
pop local 3
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 3
push argument 1
push argument 3
sub
pop local 2
label WHILE_EXP2
push local 3
push local 5
lt
not
if-goto WHILE_END2
push constant 0
pop local 4
push argument 2
push argument 3
add
pop local 1
label WHILE_EXP3
push local 4
push local 5
lt
not
if-goto WHILE_END3
push local 1
push this 0
push local 2
call Math.multiply 2
add
push this 2
add
push local 3
push local 5
push local 4
call Math.multiply 2
add
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
sub
pop local 1
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP3
label WHILE_END3
push local 3
push constant 1
add
pop local 3
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP2
label WHILE_END2
push local 0
call Array.dispose 1
pop temp 0
push constant 0
not
return
function Grid.rmRow 2
push argument 0
pop pointer 0
push constant 1
pop local 1
label WHILE_EXP0
push local 1
push this 1
push constant 1
sub
lt
not
if-goto WHILE_END0
push argument 1
pop local 0
label WHILE_EXP1
push local 0
push constant 0
gt
not
if-goto WHILE_END1
push local 0
push this 0
push local 1
call Math.multiply 2
add
push this 2
add
push local 0
push constant 1
sub
push this 0
push local 1
call Math.multiply 2
add
push this 2
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
sub
pop local 0
goto WHILE_EXP1
label WHILE_END1
push local 0
push this 0
push local 1
call Math.multiply 2
add
push this 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Grid.rmFullRows 4
push argument 0
pop pointer 0
push constant 0
pop local 2
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 0
push constant 1
sub
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
push constant 0
not
pop local 3
label WHILE_EXP1
push local 1
push this 1
lt
not
if-goto WHILE_END1
push local 0
push this 0
push local 1
call Math.multiply 2
add
push this 2
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 3
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 3
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push local 0
call Grid.rmRow 2
pop temp 0
push local 2
push constant 1
add
pop local 2
label IF_FALSE1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 2
return
function Grid.dispose 0
push argument 0
pop pointer 0
push this 2
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
